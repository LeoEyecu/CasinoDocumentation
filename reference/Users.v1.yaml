openapi: 3.0.0
info:
  title: Users
  version: '1.0'
  description: ''
servers:
  - url: 'https://games.eyecu.digital'
    description: EyeCu Games Servers
paths:
  /api/login:
    post:
      summary: User authentication
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              examples:
                Login success:
                  value:
                    token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vdGVzdGluZy5sdWNreS1zdHJpa2UuY2x1Yi9hcGkvbG9naW4iLCJpYXQiOjE1OTY1MzcwNDQsImV4cCI6MTU5NjU0MDY0NCwibmJmIjoxNTk2NTM3MDQ0LCJqdGkiOiIyS0V2RXVMckM3bTY2aW9VSURvME1kdEtHckkxT3FmaTBXdVJwOHVWIiwic3ViIjo2NywicHJ2IjoiM2VmNmNmODlmNTU5YTkyYjNlYjdiNzdiOGM3MmRiMzlkNDdlZGI2MCJ9.XaTpLVWTJaSCfT93I8AKACdMGNfGAjAyu3oAHFyoVW4
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Invalid credentials:
                  value:
                    error: Invalid credentials.
      operationId: post-api-login
      description: Authentication of a user in a Shop
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples: {}
        description: |-
          Authentication request require only 2 parameters : 
          - username : username of the user
          - password : password of the user
      parameters:
        - schema:
            type: string
          in: query
          name: key
          description: API Key of the shop
          required: true
        - schema:
            type: string
          in: query
          name: shop_id
          description: Shop ID
          required: true
      tags:
        - Session
    parameters: []
  /api/me:
    get:
      summary: Get user information
      responses:
        '200':
          description: User fetch success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  phone:
                    type: string
                  balance:
                    type: string
                  avatar:
                    type: string
                  address:
                    type: string
                  country_id:
                    type: integer
                  role_id:
                    type: integer
                  status:
                    type: string
                  birthday:
                    type: string
                  last_login:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              examples:
                User informations:
                  value:
                    id: 67
                    first_name: 'null'
                    last_name: 'null'
                    username: '570358599'
                    phone: 'null'
                    balance: '200.0000'
                    avatar: 'http://website.com/back/img/profile.png'
                    address: 'null'
                    country_id: 1
                    role_id: 1
                    status: Active
                    birthday: 'null'
                    last_login: ''
                    created_at: '2020-08-02 14:21:15'
                    updated_at: '2020-08-02 14:21:15'
        '401':
          description: Unauthorized
      operationId: get-api-me
      description: Get the user information of a logged users (after login success)
      parameters:
        - schema:
            type: string
          in: query
          name: key
          description: API Key of the Shop
          required: true
        - schema:
            type: string
          in: query
          name: shop_id
          description: Shop ID
          required: true
      tags:
        - Session
      security:
        - JWT Token: []
    parameters: []
  /api/me/details/auth:
    put:
      summary: Update user credentials
      operationId: put-api-me-details-auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type:
                      - string
                      - 'null'
                  last_name:
                    type:
                      - string
                      - 'null'
                  username:
                    type: string
                  phone:
                    type:
                      - string
                      - 'null'
                  balance:
                    type: string
                  avatar:
                    type: string
                  address:
                    type:
                      - string
                      - 'null'
                  country_id:
                    type:
                      - number
                      - 'null'
                  role_id:
                    type: integer
                  status:
                    type: string
                  birthday:
                    type:
                      - string
                      - 'null'
                  last_login:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              examples:
                User return example:
                  value:
                    id: 67
                    first_name: null
                    last_name: null
                    username: '570358550'
                    phone: null
                    balance: '90.0000'
                    avatar: 'http://website.com/back/img/profile.png'
                    address: null
                    country_id: null
                    role_id: 1
                    status: Active
                    birthday: null
                    last_login: '2020-09-01 10:05:12'
                    created_at: '2020-08-02 14:21:15'
                    updated_at: '2020-09-01 10:05:20'
        '422':
          description: |-
            When you want to change the password, but the password conformation not match or 'password_confirmation' not sent in the body (422)

            Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  password:
                    type: array
                    items:
                      type: string
              examples:
                Password not match response:
                  value:
                    password:
                      - The password confirmation does not match.
      description: 'Update user authentication informations (username, password)'
      security:
        - JWT Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'If you want to change the user username, you can provide this in the body to change it'
                password:
                  type: string
                  description: 'If you want to change the user password, you can add this property to change it (don''t forget to add also ''password_confirmation'')'
                password_confirmation:
                  type: string
                  description: 'If you want to change the password you should also add ''password_confirmation'', it need to confirm the password (in ''password'' property)'
            examples:
              Change username:
                value:
                  username: test5555
              Change password:
                value:
                  password: dD526oikujhygfvd807
                  password_confirmation: dD526oikujhygfvd807
              Change username & password:
                value:
                  username: test5555
                  password: dD526oikujhygfvd807
                  password_confirmation: dD526oikujhygfvd807
      parameters:
        - schema:
            type: string
          in: query
          name: shop_id
          description: Your Shop ID
          required: true
        - schema:
            type: string
          in: query
          name: key
          description: Your API Key
          required: true
  /api/me/avatar:
    put:
      summary: ''
      operationId: put-api-me-avatar
      responses:
        '200':
          description: OK
      tags:
        - Session
    delete:
      summary: ''
      operationId: delete-api-me-avatar
      responses:
        '200':
          description: OK
  /me/avatar/external:
    put:
      summary: Your PUT endpoint
      tags:
        - Session
      responses: {}
      operationId: put-me-avatar-external
  /api/me/sessions:
    get:
      summary: Your GET endpoint
      tags:
        - Session
      responses: {}
      operationId: get-api-me-sessions
  /api/me/return:
    get:
      summary: Your GET endpoint
      tags:
        - Session
      responses: {}
      operationId: get-api-me-return
components:
  schemas: {}
  securitySchemes:
    JWT Token:
      type: http
      scheme: bearer
      description: Provided by /api/login
tags:
  - name: Session

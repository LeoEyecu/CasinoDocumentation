openapi: 3.0.0
info:
  title: Users
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /api/login:
    post:
      summary: User authentication
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              examples:
                Login success:
                  value:
                    token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vdGVzdGluZy5sdWNreS1zdHJpa2UuY2x1Yi9hcGkvbG9naW4iLCJpYXQiOjE1OTY1MzcwNDQsImV4cCI6MTU5NjU0MDY0NCwibmJmIjoxNTk2NTM3MDQ0LCJqdGkiOiIyS0V2RXVMckM3bTY2aW9VSURvME1kdEtHckkxT3FmaTBXdVJwOHVWIiwic3ViIjo2NywicHJ2IjoiM2VmNmNmODlmNTU5YTkyYjNlYjdiNzdiOGM3MmRiMzlkNDdlZGI2MCJ9.XaTpLVWTJaSCfT93I8AKACdMGNfGAjAyu3oAHFyoVW4
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Invalid credentials:
                  value:
                    error: Invalid credentials.
      operationId: post-api-login
      description: Authentication of a user in a Shop
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples: {}
        description: |-
          Authentication request require only 2 parameters : 
          - username : username of the user
          - password : password of the user
      parameters:
        - schema:
            type: string
          in: query
          name: key
          description: API Key of the shop
          required: true
        - schema:
            type: string
          in: query
          name: shop_id
          description: Shop ID
          required: true
      tags:
        - Session
    parameters: []
  /api/me:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-api-me
  /api/me/details:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-api-me-details
  /api/me/details/auth:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-api-me-details-auth
  /api/me/avatar:
    put:
      summary: ''
      operationId: put-api-me-avatar
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-api-me-avatar
      responses:
        '200':
          description: OK
  /me/avatar/external:
    put:
      summary: Your PUT endpoint
      tags: []
      responses: {}
      operationId: put-me-avatar-external
  /api/me/sessions:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-api-me-sessions
  /api/me/return:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-api-me-return
components:
  schemas: {}
tags:
  - name: Session
